# _*_ codig utf8 _*_
import numpy as np


def entropy(p):
    return -1 * np.sum(pi * np.log2(pi) for pi in p)


# Gain = H(D) - H(D|X)
# 0:原始數據中的信息熵H(D)，0.7能償還債務，0.3不能償還
p0 = [0.7, 0.3]
hd = entropy(p0)
print('根節點H（D）=%.3f' % hd)

# 1:房產屬性的信息熵
# 第一個分支的概率和熵，即有房產
p11 = 0.4
h11 = entropy([1])

# 第二個分支的概率和熵，即没有房产
p12 = 0.6
h12 = entropy([0.5, 0.5])
# 第一个分支的条件熵，包括根节点和两个子节点 ====给定X的情况下，所有不同X值的对应的Y的熵的平均值就是条件熵
h1 = p11 * h11 + p12 * h12
# 信息增益量
g1 = hd - h1
print('基于房产的信息增益量：%.3f' % g1)

# 基于婚姻状况的信息增益量.婚姻有三种情况： 已婚，未婚，离异
# 已婚
p21 = 0.3
h21 = entropy([1])

# 未婚
p22 = 0.4
h22 = entropy([0.5, 0.5])

# 离婚
p23 = 0.3  # 离婚这中状态的数据占总数据集的比率
h23 = entropy([2.0 / 3, 1.0 / 3])  # 这里的概率是在离婚的数据集中统计的概率

# 基于婚姻状况的信息增益量：
h2 = p21 * h21 + p22 * h22 + p23 * h23
g2 = hd - h2
print('基于婚姻状况的信息增益量为%.3f' % g2)

# 基于年收入计算信息增益量。 年收入是数值类型，按区间划分，取相邻两个数值的平均值作为标准，
# threshhold = 80
# 小于80：
p31 = 0.2
h31 = entropy([1.0])

# 大于等于80：
p32 = 0.8
h32 = entropy([5.0 / 8, 3.0 / 8])

h3 = p31 * h31 + p32 * h32
g3 = hd - h3
print('年收入阈值80的信息增益量%.3f' % g3)
# threshhold = 97.5
p41 = 0.5
h41 = entropy([2.0 / 5, 3.0 / 5])

# 大于等于80：
p42 = 0.5
h42 = entropy([1])

h4 = p41 * h41 + p42 * h42
g4 = hd - h4

print('年收入阈值97.5的信息增益量%.3f' % g4)
